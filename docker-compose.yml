version: '3.8'

services:
  # 백엔드 서비스
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: iai-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USERNAME=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_DATABASE=${MYSQL_DATABASE}
      - JWT_SECRET=${JWT_SECRET}
      - KAKAO_CLIENT_ID=${KAKAO_CLIENT_ID}
      - KAKAO_CLIENT_SECRET=${KAKAO_CLIENT_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - db
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 데이터베이스 서비스
  db:
    image: mysql:8.0
    container_name: iai-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - '${MYSQL_PORT:-3306}:3306'
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - app-network
    command: --default-authentication-plugin=mysql_native_password

  # Nginx 리버스 프록시
  nginx:
    image: nginx:alpine
    container_name: iai-nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
      - nginx_cache:/var/cache/nginx
      - certbot_webroot:/var/www/certbot:ro
      - certbot_certs:/etc/letsencrypt:ro
    depends_on:
      - backend
    networks:
      - app-network
    # nginx 성능 최적화를 위한 시스템 설정
    sysctls:
      - net.core.somaxconn=65535

  # Let's Encrypt SSL 인증서 관리
  certbot:
    image: certbot/certbot
    container_name: iai-certbot
    restart: unless-stopped
    volumes:
      - certbot_webroot:/var/www/certbot
      - certbot_certs:/etc/letsencrypt
      - certbot_logs:/var/log/letsencrypt
    command: certonly --webroot --webroot-path=/var/www/certbot --email your-email@domain.com --agree-tos --no-eff-email -d iailog.store -d www.iailog.store
    depends_on:
      - nginx
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
  nginx_logs:
  nginx_cache:
  certbot_webroot:
  certbot_certs:
  certbot_logs:
